<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLimpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>